CREATE TABLE Orders(
    idOrder INTEGER PRIMARY KEY NOT NULL,
    registrationDate INTEGER NOT NULL,
    presumptiveDate INTEGER NOT NULL,
    idModel INTEGER  NOT NULL,
    idClient INTEGER NOT NULL,
    costOrder INTEGER NOT NULL,
    prepayment INTEGER,
    statusOrder TEXT NOT NULL,
    FOREIGN KEY (idModel) REFERENCES Model(idModel),
    FOREIGN KEY (idClient) REFERENCES Client(idClient)
);


CREATE TABLE Master(
    idMaster INTEGER PRIMARY KEY NOT NULL,
    surname TEXT NOT NULL,
    name TEXT NOT NULL,
    lastname TEXT NOT NULL,
    salary REAL NOT NULL
);

CREATE TABLE MasrerOrder(
    idMaster INTEGER,
    idOrder INTEGER,
    FOREIGN KEY (idMaster) REFERENCES Master(idMaster) ON DELETE CASCADE,
    FOREIGN KEY (idOrder) REFERENCES Orders(idOrder) ON DELETE CASCADE
);

CREATE TABLE Model(
    idModel INTEGER PRIMARY KEY NOT NULL,
    cost INTEGER NOT NULL,
    weight REAL NOT NULL,
    productionTime INTEGER NOT NULL,
    name TEXT NOT NULL,
    type TEXT NOT NULL,
    patch TEXT NOT NULL
);

CREATE TABLE Client(
    idClient  INTEGER PRIMARY KEY NOT NULL,
    surname TEXT NOT NULL,
    name TEXT NOT NULL,
    lastname TEXT,
    phoneNumber Text,
    mail TEXT
);

getOrderById:
    SELECT * FROM Orders WHERE idOrder = ?;

replaceOrder:
    INSERT OR REPLACE INTO Orders(idOrder, registrationDate, presumptiveDate,idModel,idClient,costOrder,prepayment,statusOrder)
           VALUES (?,?,?,?,?,?,?,?);

replaceCake:
    INSERT OR REPLACE INTO Model(idModel, cost, weight, productionTime, name, type, patch)
        VALUES (?,?,?,?,?,?,?);

getCakesById:
    SELECT * FROM Model WHERE idModel = (:idModel);

allOrders:
    SELECT * FROM Orders o
        LEFT JOIN Model m ON o.idModel = m.idModel
        LEFT JOIN Client c ON o.idClient = c.idClient;

showAllMaster:
    SELECT * FROM Master;

getMasterOrders:
    SELECT * FROM MasrerOrder  m
        LEFT JOIN Master mas ON m.idMaster = mas.idMaster
        LEFT JOIN Orders o ON o.idOrder = m.idOrder
        LEFT JOIN Model mod ON mod.idModel = o.idModel;

auth:
    SELECT * FROM Client WHERE phoneNumber == (:phone) AND mail == (:mail);

createClient:
    INSERT INTO Client(idClient, surname, name, lastname, phoneNumber, mail)
        VALUES (?,?,?,?,?,?);

showAllCake:
    SELECT * FROM Model;

createCake:
    INSERT OR REPLACE INTO Model(idModel, cost, weight, productionTime, name, type, patch)
        VALUES (?,?,?,?,?,?,?);

showCakeByCost:
    SELECT * FROM Model WHERE cost BETWEEN 0 AND (:max);

showOrdesByDate:
    SELECT * FROM Orders o
    LEFT JOIN Model m ON m.idModel == o.idModel AND presumptiveDate == (:presumptiveDate)
    LEFT JOIN Client c ON c.idClient == o.idClient;

showOrdersByIndividualClient:
    SELECT * FROM Orders o
    LEFT JOIN Model m ON m.idModel = o.idModel
    WHERE o.idClient = (:idClient);


createMaster:
    INSERT OR REPLACE INTO Master(idMaster, surname, name, lastname,salary)
        VALUES (?,?,?,?,?);

createOrder:
    INSERT OR REPLACE INTO Orders(idOrder, registrationDate, presumptiveDate,idModel,idClient,costOrder,prepayment,statusOrder)
        VALUES (?,?,?,?,?,?,?,?);

assignmentMaster:
     INSERT OR REPLACE INTO MasrerOrder(idMaster, idOrder)
        VALUES (?, ?);

showOrdersByIndividualMaster:
    SELECT o.* FROM MasrerOrder t
    LEFT JOIN Orders o ON o.idOrder == t.idOrder AND t.idMaster == (:idMaster);

